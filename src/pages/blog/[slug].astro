---
import Layout from '../../layouts/Layout.astro';
import Seo from '../../components/Seo.astro';
import JsonLd from '../../components/JsonLd.astro';
import { getCollection } from 'astro:content';

// base-aware helpers
const base = import.meta.env.BASE_URL;
const href = (p = '') => `${base.replace(/\/?$/, '/')}${p.replace(/^\/+/, '')}`;
const srcify = (p?: string) => (p?.startsWith('/') ? `${base}${p.slice(1)}` : p);

// ✅ Build-time: generate routes for each blog post
export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((p) => ({
    params: { slug: p.slug },
    props: { entry: p }, // pass the whole entry as props
  }));
}

// Page props from getStaticPaths
const { entry } = Astro.props;

const site = Astro.site?.toString() ?? 'https://misty-light-media.github.io/vitaledge-site/';
const path = `/blog/${entry.slug}/`;
const heroImg = srcify(entry.data.heroImage);
const ogImg = srcify(entry.data.previewImage || entry.data.heroImage);

// optional: fallback reading time
const readingTime =
  typeof entry.data.readingTime === 'number'
    ? entry.data.readingTime
    : Math.max(3, Math.round((String((await entry.render()).remarkPluginFrontmatter?.rawContent || '').split(/\s+/).length || 800) / 225));
---

<Layout title={entry.data.title}>
  <Seo
    title={entry.data.title}
    description={entry.data.description}
    path={path}
    image={ogImg}
    type="article"
  />

  <JsonLd json={{
    "@context": "https://schema.org",
    "@type": "Article",
    "headline": entry.data.title,
    "description": entry.data.description,
    "datePublished": entry.data.pubDate,
    "dateModified": entry.data.updatedDate ?? entry.data.pubDate,
    "author": entry.data.author ? [{"@type":"Person","name": entry.data.author}] : undefined,
    "image": ogImg ? new URL(ogImg, site).toString() : undefined,
    "mainEntityOfPage": new URL(path, site).toString(),
    "keywords": Array.isArray(entry.data.tags) ? entry.data.tags.join(', ') : undefined
  }} />

  <main class="max-w-3xl mx-auto px-4 py-10">
    <article class="prose max-w-none">
      {heroImg && <img src={heroImg} alt={entry.data.title} class="w-full rounded-xl mb-6" />}
      <h1>{entry.data.title}</h1>
      <p class="text-sm text-gray-500">
        {new Date(entry.data.pubDate).toLocaleDateString()}
        {readingTime ? ` · ${readingTime} min read` : ''}
      </p>

      {await entry.render()}
    </article>

    <div class="mt-10">
      <a href={href('blog/')} class="text-blue-600 hover:underline">← Back to Blog</a>
    </div>
  </main>
</Layout>
